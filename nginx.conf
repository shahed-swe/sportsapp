worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 50M;

    upstream app_servers {
        server 127.0.0.1:5001;
    }

    server {
        listen 80;
        server_name localhost;

        # Serve static files directly
        location /static/ {
            alias /app/client/dist/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Serve uploaded files
        location /uploads/ {
            alias /app/uploads/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Proxy all other requests to the Node.js application
        location / {
            proxy_pass http://app_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
